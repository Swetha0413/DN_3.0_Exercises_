scenario 1:
DECLARE
    CURSOR customer_cursor IS
        SELECT customer_id, age, loan_interest_rate
        FROM customers;
    v_customer_id customers.customer_id%TYPE;
    v_age customers.age%TYPE;
    v_loan_interest_rate customers.loan_interest_rate%TYPE;
BEGIN
    OPEN customer_cursor;
    LOOP
        FETCH customer_cursor INTO v_customer_id, v_age, v_loan_interest_rate;
        EXIT WHEN customer_cursor%NOTFOUND;
        
        IF v_age > 60 THEN
            UPDATE customers
            SET loan_interest_rate = loan_interest_rate * 0.99
            WHERE customer_id = v_customer_id;
        END IF;
    END LOOP;
    CLOSE customer_cursor;
    COMMIT;
END;
/
scenario 2:
DECLARE
    CURSOR customer_cursor IS
        SELECT customer_id, balance
        FROM customers;
    v_customer_id customers.customer_id%TYPE;
    v_balance customers.balance%TYPE;
BEGIN
    OPEN customer_cursor;
    LOOP
        FETCH customer_cursor INTO v_customer_id, v_balance;
        EXIT WHEN customer_cursor%NOTFOUND;
        
        IF v_balance > 10000 THEN
            UPDATE customers
            SET IsVIP = TRUE
            WHERE customer_id = v_customer_id;
        END IF;
    END LOOP;
    CLOSE customer_cursor;
    COMMIT;
END;
/
scenario 3:
DECLARE
    CURSOR loan_cursor IS
        SELECT customer_id, loan_due_date
        FROM loans
        WHERE loan_due_date BETWEEN SYSDATE AND SYSDATE + 30;
    v_customer_id loans.customer_id%TYPE;
    v_loan_due_date loans.loan_due_date%TYPE;
BEGIN
    OPEN loan_cursor;
    LOOP
        FETCH loan_cursor INTO v_customer_id, v_loan_due_date;
        EXIT WHEN loan_cursor%NOTFOUND;
        
        DBMS_OUTPUT.PUT_LINE('Reminder: Customer ' || v_customer_id || ' has a loan due on ' || TO_CHAR(v_loan_due_date, 'YYYY-MM-DD'));
    END LOOP;
    CLOSE loan_cursor;
END;
/
